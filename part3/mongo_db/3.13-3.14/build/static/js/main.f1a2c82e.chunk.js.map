{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/personService.js","components/Notification.js","components/ErrorMessage.js","App.js","index.js"],"names":["Filter","showName","handleShowName","value","onChange","PersonForm","props","onSubmit","AddName","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","RemoveContact","namesToShow","filter","person","name","toLowerCase","includes","map","key","id","number","onClick","baseUrl","axios","get","newObject","post","put","delete","Notification","className","ErrorMessage","message","App","useState","setPersons","setNewName","setNewNumber","setShowName","addMessage","setAddMessage","errorMessage","setErrorMessage","useEffect","personService","then","initialPersons","data","event","target","preventDefault","some","e","window","confirm","changePerson","find","changedNumber","response","catch","error","setTimeout","returnedPerson","concat","console","log","removeMessage","ReactDOM","render","puhelinluettelo","document","getElementById"],"mappings":"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","file":"static/js/main.f1a2c82e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({showName, handleShowName}) => {\n\treturn (\n\t\t<form>\n\t\t<div> Filter by name: <input value={showName} onChange={handleShowName}/> </div>\n\t\t</form>\n\t\t)\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n\t\n\n\treturn (\n\t\t<form onSubmit={props.AddName}>\n\t\t\t<div> name: <input value={props.newName} onChange={props.handleNameChange}/> </div>\n\t\t\t<div> number: <input value={props.newNumber} onChange={props.handleNumberChange}/> </div>\n\t\t\t<div> <button type=\"submit\">add</button> </div>\n\t\t</form>\n\t\t)\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({persons, showName, RemoveContact}) => {\n\n\tconst namesToShow = !showName\n\t? persons\n\t:persons.filter\n\t(person => person.name.toLowerCase().includes(showName.toLowerCase()))\n\n\treturn(\n\t\t<div>\n\t\t{namesToShow.map(person => \n\t\t\t<li key={person.id}> {person.name} {person.number}\n\t\t\t&nbsp;\n\t\t\t<button onClick={() => RemoveContact(person.name, person.id)}>Delete</button></li>)}\n\t\t</div>\n\t\t)\n}\n\nexport default Persons","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react'\n\nconst Notification = ({ person }) => {\n\n\tif (person === null) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className=\"notification\">\n\t\tAdded {person}\n\t\t</div>\n\t\t)\n}\n\nexport default Notification","import React from 'react'\n\nconst ErrorMessage = ({ message }) => {\n\n\tif (message === null) {\n\t\treturn null\n\t}\n\n\tif (message === \"addError\") {\n\t\treturn (\n\t\t\t<div className=\"errorMessage\">\n\t\t\t\tWrong input or name already in phonebook\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"errorMessage\">\n\t\t\t{message} was already removed from the phonebook\n\t\t</div>\n\t)\n}\n\nexport default ErrorMessage","import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/personService'\nimport Notification from './components/Notification'\nimport ErrorMessage from './components/ErrorMessage'\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showName, setShowName] = useState('')\n  const [addMessage, setAddMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons.data)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleShowName = (event) => {\n    setShowName(event.target.value)\n  }\n\n  const AddName = (event) => {\n\n    event.preventDefault()\n\n    if (persons.some(e => e.name.toLowerCase() === newName.toLowerCase() && e.number !== newNumber)) {\n      const result = window.confirm(`${newName} is already in the phonebook, want to change the number?`)\n\n      if (result) {\n        const changePerson = persons.find(person =>\n          person.name.toLowerCase() === newName.toLowerCase())\n        const changedNumber = { ...changePerson, number: newNumber }\n\n        personService\n          .update(changePerson.id, changedNumber)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== changePerson.id ? person : response.data))\n          })\n          .catch(error => {\n            setErrorMessage(newName)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 2000)\n          })\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson.data))\n          setAddMessage(newName)\n          setTimeout(() => {\n            setAddMessage(null)\n          }, 2000)\n        }).catch(error => {\n          console.log(error.response.data)\n          setErrorMessage(\"addError\")\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 2000)\n        })\n\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const RemoveContact = (name, id) => {\n    const message = `Do you want to delete '${name}'?`\n    if (window.confirm(message)) {\n      personService\n        .remove(id)\n        .then(removeMessage => {\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n  }\n\n  return (\n\n    <div>\n      <h2>Phonebook</h2>\n      <Filter showName={showName} handleShowName={handleShowName} />\n      <Notification person={addMessage} />\n      <ErrorMessage message={errorMessage} />\n      <div>\n        <h2>Add a new contact</h2>\n        <PersonForm\n          AddName={AddName}\n          persons={persons}\n          setPersons={setPersons}\n          setNewName={setNewName}\n          setNewNumber={setNewNumber}\n          newName={newName}\n          handleNameChange={handleNameChange}\n          newNumber={newNumber}\n          handleNumberChange={handleNumberChange}\n        />\n      </div>\n      <h3>Numbers</h3>\n      <Persons persons={persons} showName={showName} RemoveContact={RemoveContact} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(\n  <App puhelinluettelo />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}