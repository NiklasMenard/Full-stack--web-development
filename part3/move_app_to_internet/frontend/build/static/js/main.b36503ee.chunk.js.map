{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/personService.js","components/Notification.js","components/ErrorMessage.js","App.js","index.js"],"names":["Filter","showName","handleShowName","value","onChange","PersonForm","props","onSubmit","AddName","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","RemoveContact","namesToShow","filter","person","name","toLowerCase","includes","map","key","id","number","onClick","baseUrl","axios","get","newObject","post","put","delete","Notification","className","ErrorMessage","message","App","useState","setPersons","setNewName","setNewNumber","setShowName","addMessage","setAddMessage","errorMessage","setErrorMessage","useEffect","personService","then","initialPersons","data","event","target","preventDefault","some","e","window","confirm","changePerson","find","changedNumber","response","catch","error","setTimeout","returnedPerson","concat","removeMessage","ReactDOM","render","puhelinluettelo","document","getElementById"],"mappings":"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","file":"static/js/main.b36503ee.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({showName, handleShowName}) => {\n\treturn (\n\t\t<form>\n\t\t<div> Filter by name: <input value={showName} onChange={handleShowName}/> </div>\n\t\t</form>\n\t\t)\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n\t\n\n\treturn (\n\t\t<form onSubmit={props.AddName}>\n\t\t\t<div> name: <input value={props.newName} onChange={props.handleNameChange}/> </div>\n\t\t\t<div> number: <input value={props.newNumber} onChange={props.handleNumberChange}/> </div>\n\t\t\t<div> <button type=\"submit\">add</button> </div>\n\t\t</form>\n\t\t)\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({persons, showName, RemoveContact}) => {\n\n\tconst namesToShow = !showName\n\t? persons\n\t:persons.filter\n\t(person => person.name.toLowerCase().includes(showName.toLowerCase()))\n\n\treturn(\n\t\t<div>\n\t\t{namesToShow.map(person => \n\t\t\t<li key={person.id}> {person.name} {person.number}\n\t\t\t&nbsp;\n\t\t\t<button onClick={() => RemoveContact(person.name, person.id)}>Delete</button></li>)}\n\t\t</div>\n\t\t)\n}\n\nexport default Persons","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react'\n\nconst Notification = ({ person }) => {\n\n\tif (person === null) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className=\"notification\">\n\t\tAdded {person}\n\t\t</div>\n\t\t)\n}\n\nexport default Notification","import React from 'react'\n\nconst ErrorMessage = ({ message }) => {\n\n\tif (message === null) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className=\"errorMessage\">\n\t\t{message} was already removed from the phonebook\n\t\t</div>\n\t\t)\n}\n\nexport default ErrorMessage","import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/personService'\nimport Notification from './components/Notification'\nimport ErrorMessage from './components/ErrorMessage'\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ showName, setShowName ] = useState('')\n  const [ addMessage, setAddMessage] = useState(null)\n  const [ errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons.data)\n      })\n  }, [])  \n\nconst handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\nconst handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\nconst handleShowName = (event) => {\n    setShowName(event.target.value)\n  }\n\nconst AddName = (event) => {\n\n    event.preventDefault()\n\n    if (persons.some(e => e.name.toLowerCase() === newName.toLowerCase() && e.number!==newNumber)) {\n    \tconst result = window.confirm(`${newName} is already in the phonebook, want to change the number?`)\n\n    \tif(result){\n    \tconst changePerson =  persons.find(person => \n    \tperson.name.toLowerCase() === newName.toLowerCase())\n    \tconst changedNumber = {...changePerson, number: newNumber}\n\n    \tpersonService\n    \t    .update(changePerson.id, changedNumber)\n    \t    .then(response => {\n    \t    setPersons(persons.map(person => person.id !== changePerson.id ? person : response.data))\n          })\n          .catch(error => {\n          setErrorMessage(newName)\n          setTimeout(() => {\n          setErrorMessage(null)\n          }, 2000)\n        })\n      }\n    } else {\n    \tconst personObject = {\n        name: newName,\n        number: newNumber\n      }\n     \tpersonService\n\t    .create(personObject)\n\t    .then(returnedPerson => {\n  \t    setPersons(persons.concat(returnedPerson.data))})\n  \t    setAddMessage(newName)\n  \t    setTimeout(() => {\n        setAddMessage(null)\n      }, 2000)\n  \t} \n      setNewName('')\n      setNewNumber('')\n  }\n\nconst RemoveContact = (name, id) => {\n\tconst message =  `Do you want to delete '${name}'?`\n\tif(window.confirm(message)){\n      personService\n      .remove(id)\n      .then(removeMessage => {\n      \t\tsetPersons(persons.filter(person => person.id !== id))\n      })\n\t\t}\n\t}\n\n  return (\n\n    <div>\n\t    <h2>Phonebook</h2>\n\t    <Filter showName={showName} handleShowName={handleShowName} />\n\t    <Notification person = {addMessage} />\n      <ErrorMessage message = {errorMessage} />\n    <div>\n    <h2>Add a new contact</h2>\n    \t<PersonForm\n\t\t    AddName = {AddName}\n\t\t    persons = {persons}\n\t\t    setPersons = {setPersons}\n\t\t    setNewName = {setNewName}\n\t\t    setNewNumber = {setNewNumber}\n\t\t    newName= {newName} \n\t\t    handleNameChange = {handleNameChange}\n\t\t    newNumber = {newNumber}\n\t\t    handleNumberChange = {handleNumberChange}\n    \t/>\n    </div>\n    <h3>Numbers</h3>\n    \t<Persons persons = {persons} showName = {showName} RemoveContact = {RemoveContact}/>\n    </div>\n    )\n  }\n\n  export default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(\n  <App puhelinluettelo />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}